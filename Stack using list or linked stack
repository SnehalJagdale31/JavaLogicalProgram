public class LinkedStack {
	
	private ListNode top;
	private int length;
	
	public boolean isEmpty() {
		return(length == 0);
	}
	
	public int size() {
		return length;
	}
	
	public void push(int data) {
		ListNode temp = new ListNode();
		temp.setData(data);
		temp.setNext(top);
		top = temp;
		length++;
	}
	
	 public int pop() throws Exception{
		 if(isEmpty()) {
			 throw new Exception("Stack is empty");
			 
		 }
		 
		 int result = top.getData();
		 top = top.getNext();
		 length--;
		 return result;
	 }
	 
	 public int peek() throws Exception {
		 if(isEmpty()) {
			 throw new Exception("Stack is empty");
		 }
		 
		 return top.getData();
	 }

}


public class ListNode {
	
	private int data;
	private ListNode next;
	
	
	public int getData() {
		return data;
	}
	public void setData(int data) {
		this.data = data;
	}
	public ListNode getNext() {
		return next;
	}
	public void setNext(ListNode next) {
		this.next = next;
	}
	

}
