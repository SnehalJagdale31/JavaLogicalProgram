public class BalanceChecker {

	public static boolean check(String str) throws Exception {
		LinkedStack stack = new LinkedStack();
		
		for(int i = 0;i<str.length(); i++) {
			char x = str.charAt(i);
			
			if(x=='('|| x=='{'|| x=='[') {
				stack.push(x);
				continue;
				
			}
			
			if(stack.isEmpty()) {
				return false;
			}
			
			char y;
			
			switch(x) {
			
			case ')':
				y=stack.pop();
				if(y=='{'||y == '[')
					return false;
				break;
				
			case '}':
				y=stack.pop();
				if(y=='('||y == '[')
					return false;
				break;
				
			case ']':
				y=stack.pop();
				if(y=='{'||y == '(')
					return false;
				break;
			}
		}
		return (stack.isEmpty());
		
	}
	
	public static void main(String[] args) throws Exception {
		
		System.out.println(check("([(){}])"));

	}

}


//creating linked stack

public class LinkedStack {
	
	private ListNode top;
	private int length;
	
	public boolean isEmpty() {
		return(length == 0);
	}
	
	public int size() {
		return length;
	}
	
	public void push(char data) {
		ListNode temp = new ListNode();
		temp.setData(data);
		temp.setNext(top);
		top = temp;
		length++;
	}
	
	 public char pop() throws Exception{
		 if(isEmpty()) {
			 throw new Exception("Stack is empty");
			 
		 }
		 
		 char result = (char) top.getData();
		 top = top.getNext();
		 length--;
		 return result;
	 }
	 
	 public int peek() throws Exception {
		 if(isEmpty()) {
			 throw new Exception("Stack is empty");
		 }
		 
		 return top.getData();
	 }

}
